#+title: Personal writing settings
#+OPTIONS: num:nil
#+PROPERTY: header-args :tangle yes

* Distraction-free screen
** COMMENT olivetti
Getting rid of olivetti because I only used it for what fontaine does.
#+begin_src elisp
(use-package olivetti
  :straight t
  :init
  (setq olivetti-body-width .67)
  :config
  (defun distraction-free ()
    "Distraction-free writing environment"
    (interactive)
    (if (equal olivetti-mode nil)
        (progn
          (window-configuration-to-register 1)
          (delete-other-windows)
          (text-scale-increase 2)
          (olivetti-mode t))
      (progn
        (jump-to-register 1)
        (olivetti-mode 0)
        (text-scale-decrease 2))))
  :bind
  (("<f9>" . distraction-free)))
#+end_src
** caps lock
#+begin_src elisp
(use-package caps-lock
  :straight t
  :bind ("C-c l" . #'caps-lock-mode))
#+end_src
** fountain mode
#+begin_src elisp
(use-package fountain-mode
  :straight t
  :mode "\\.fountain\\'")
#+end_src
** flyspell
#+begin_src elisp
(use-package flyspell
  :straight t
  :config
  (setq ispell-program-name "hunspell"
	ispell-default-dictionary "en_AU")
  :hook (text-mode . flyspell-mode)
  :bind (("M-<f7>" . flyspell-buffer)
	 ("<f7>" . flyspell-word)
	 ("C-;" . flyspell-auto-correct-previous-word)))
#+end_src
** TODO Deft
- Note taken on [2022-05-14 Sat 02:13] \\
  The /C-c C-g/ binding has got to go! I use that for escape. No big deal if I keep which-key disabled. Still...annoying.
Needs to be moved to core so it makes more sense.
*** deft
#+begin_src elisp
  (use-package deft
    :straight t
    :custom ((custom-deft-extensions '("org" "md" "text" "tex"))
             (deft-directory "~/Dropbox/org")
             (deft-recursive t))
    :bind (("<f8>" . deft)
           ("C-x C-g" . deft-find-file))
    :commands (deft deft-find-file)
    :init)
    (global-set-key (kbd "M-s F") #'mu-deft-modules)
#+end_src
*** deft modules
#+begin_src elisp
  (defun mu-deft-modules ()
    (interactive)
    (require 'deft)
    (setq hold-deft-dir deft-directory)
    ;; (setq deft-directory "~/.repos/github.com/lesliesrussell/mu-emacs/modules")
    (setq deft-directory (concat user-emacs-directory "modules/"))
    (deft)
    (setq deft-directory hold-deft-dir))

  (global-set-key (kbd "M-s F") #'mu-deft-modules)
#+end_src
** flycheck
#+begin_src elisp
  (use-package flycheck
    :straight t
    :defer t
    ;; :init (global-flycheck-mode)
    )

  (add-hook 'emacs-startup-hook
            (lambda ()
              (global-flycheck-mode)))
#+end_src
** markdown
#+begin_src elisp
(use-package markdown-mode
  :straight t
  :mode ("README\\.md\\'" . gfm-mode)
  :init (setq markdown-command "multimarkdown"))

;; (use-package flymd
;;   :straight t
;;   :hook (gfm-mode . (flymd)))
#+end_src
** writegood
#+begin_src elisp
(use-package writegood-mode
  :straight t
  :bind (("C-c C-g w" . #'writegood-mode)
	 ("C-c C-g g" . #'writegood-grade-level)
	 ("C-c C-g e" . #'writegood-reading-ease)))
#+end_src
